apiVersion: {{ include "daemonsetversion" . }}
kind: DaemonSet
metadata:
  name: csi-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: csi-packet-driver
  template:
    metadata:
      labels:
        app: csi-packet-driver
      annotations:
        checksum/secret-csi-diskplugin-packet: {{ include (print $.Template.BasePath "/credential-secret.yaml") . | sha256sum }}
    spec:
      hostNetwork: true
      serviceAccount: csi-node-sa
      containers:
        - name: csi-driver-registrar
          imagePullPolicy: IfNotPresent
          image: {{ index .Values.images "csi-node-driver-registrar" }}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/net.packet.csi/csi.sock"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          #  - name: registrar-socket-dir
          #    mountPath: /var/lib/csi/sockets/
        - name: packet-driver
          securityContext:
            privileged: true
          imagePullPolicy: Always
          image: {{ index .Values.images "packet-storage-interface" }}
          args:
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: PACKET_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: csi-diskplugin-packet
                  key: apiToken
            - name: PACKET_PROJECT_ID
              valueFrom:
                secretKeyRef:
                  name: csi-diskplugin-packet
                  key: projectID
          volumeMounts:
            - name: kubelet-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - name: plugin-dir
              mountPath: /csi
            - name: sys-devices
              mountPath: /sys/devices
            - mountPath: /dev
              name: dev
            - mountPath: /etc
              name: etc
            - mountPath: /run/udev
              name: run-udev
            - mountPath: /var/lib/iscsi
              name: var-lib-iscsi
            - name: lib-modules
              mountPath: /lib/modules
            - mountPath: /usr/share/ca-certificates/
              name: ca-certs-alternative
              readOnly: true
      volumes:
        # TODO(dependency): this will work when kublet registrar functionality exists
        #- name: registrar-socket-dir
        #  hostPath:
        #    path: /var/lib/kubelet/device-plugins/
        #    type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/net.packet.csi/
            type: DirectoryOrCreate
        - name: dev
          hostPath:
            path: /dev
            type: Directory
        - name: etc
          hostPath:
            path: /etc/
        - name: var-lib-iscsi
          hostPath:
            path: /var/lib/iscsi/
            type: DirectoryOrCreate
        - name: sys-devices
          hostPath:
            path: /sys/devices
            type: Directory
        - name: run-udev
          hostPath:
            path: /run/udev/
            type: Directory
        - name: lib-modules
          hostPath:
            path: /lib/modules
            type: Directory
        - name: ca-certs-alternative
          hostPath:
            path: /usr/share/ca-certificates/
            type: DirectoryOrCreate
