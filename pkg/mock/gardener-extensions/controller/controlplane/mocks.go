// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener-extensions/pkg/controller/controlplane (interfaces: ValuesProvider)

// Package controlplane is a generated GoMock package.
package controlplane

import (
	context "context"
	controller "github.com/gardener/gardener-extensions/pkg/controller"
	v1alpha1 "github.com/gardener/gardener/pkg/apis/extensions/v1alpha1"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockValuesProvider is a mock of ValuesProvider interface
type MockValuesProvider struct {
	ctrl     *gomock.Controller
	recorder *MockValuesProviderMockRecorder
}

// MockValuesProviderMockRecorder is the mock recorder for MockValuesProvider
type MockValuesProviderMockRecorder struct {
	mock *MockValuesProvider
}

// NewMockValuesProvider creates a new mock instance
func NewMockValuesProvider(ctrl *gomock.Controller) *MockValuesProvider {
	mock := &MockValuesProvider{ctrl: ctrl}
	mock.recorder = &MockValuesProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockValuesProvider) EXPECT() *MockValuesProviderMockRecorder {
	return m.recorder
}

// GetConfigChartValues mocks base method
func (m *MockValuesProvider) GetConfigChartValues(arg0 context.Context, arg1 *v1alpha1.ControlPlane, arg2 *controller.Cluster) (map[string]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigChartValues", arg0, arg1, arg2)
	ret0, _ := ret[0].(map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigChartValues indicates an expected call of GetConfigChartValues
func (mr *MockValuesProviderMockRecorder) GetConfigChartValues(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigChartValues", reflect.TypeOf((*MockValuesProvider)(nil).GetConfigChartValues), arg0, arg1, arg2)
}

// GetControlPlaneChartValues mocks base method
func (m *MockValuesProvider) GetControlPlaneChartValues(arg0 context.Context, arg1 *v1alpha1.ControlPlane, arg2 *controller.Cluster, arg3 map[string]string) (map[string]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetControlPlaneChartValues", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetControlPlaneChartValues indicates an expected call of GetControlPlaneChartValues
func (mr *MockValuesProviderMockRecorder) GetControlPlaneChartValues(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetControlPlaneChartValues", reflect.TypeOf((*MockValuesProvider)(nil).GetControlPlaneChartValues), arg0, arg1, arg2, arg3)
}
